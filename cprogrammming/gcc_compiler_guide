
1. GCC

to stop compiler at the assembler phase, leaving the assembly language 
in the file <file_name>.s
gcc -S <file_name>.c

2.
To generate debug information used by GDB debugger.

gcc -g <file_name>.c -o <file_name>

Now open <file_name> with ddd(DataDisplayDebugger) or gdb.
gdb: is a command line debugger (one of the kind i like)
ddd: GNU graphical front-end for command-line debugger such as GDB and more.

For example,

Compile with -g option
gcc -g <file_name>.c -o <file_name>

Open the executable with ddd
ddd <file_name> &

We can examine the each function call i.e. stack frame 
using Status menu ---> Backtrack

we can use command: bt for backtrack, which shows function calls are
stored in stack.


