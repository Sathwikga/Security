

BASH standard wildcards => also known as globbing patterns.
man 7 glob

glob - globbing pathnames

Long ago, in UNIX V6, there was a program /etc/glob that would expand wildcard patterns. Soon afterward this 
became a shell built-in. These days there is also a library routine glob(3) that will perform this function for 
a user program. 

The rules are follows (POSIX.2, 3.13).
Wildcard matching
-----------------
A string is a wildcard pattern if it contains one of the characters: '?', '*', or '['. 
Globbing is the operation that expands a wildcard pattern into the list of pathnames matching 
the pattern. 
Matching is defined by:
-----------------------
1. A '?' (not between brackets) matches any single character. 
2. A '*' (not between brackets) matches any string, including the empty string. 
3. 

Not everyone knows that there's lots of bash syntaxes that makes you able to execute system commands just using:
question mark ?, the forward slash "/", numbers , and letters. 



demo@demo:~$ /???/?s --help
Usage: /bin/ls [OPTION]... [FILE]...
List information about the FILEs (the current directory by default).
Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.

Mandatory arguments to long options are mandatory for short options too.
  -a, --all                  do not ignore entries starting with .
  -A, --almost-all           do not list implied . and ..
      --author               with -l, print the author of each file
  -b, --escape               print C-style escapes for nongraphic characters
      --block-size=SIZE      scale sizes by SIZE before printing them.  E.g.,
                               `--block-size=M' prints sizes in units of
                               1,048,576 bytes.  See SIZE format below.
                               
Let's say that vulnerable target is behind a Web Application Firewall (WAF), and this WAF has a rule that 
blocks all requests containing /etc/passwd or /bin/ls inside the value of a GET parameter or inside the body 
in a POST request. 
/?parm1=cat+/etc/passwd: it will be blocked by the target WAF and your IP will be banned forever and tagged. 


/?parm1=%2f???%2f??t%20%27???%2fp??s??

url-encoding
------------
%2f = /
%20 = space 




 
